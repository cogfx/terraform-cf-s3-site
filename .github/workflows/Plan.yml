name: Terraform Plan

# Controls when the workflow will run
on:
  # Triggers the workflow on push events on the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: dev
    steps:
    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1    

      # Configure AWS assume-role identity
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      
      - name: Extract Terraform version
        id: version-extract
        run: |
          TFVERSION=$(terraform version | grep Terraform)
          echo "TF_VAR_TFVERSION=$TFVERSION" >> $GITHUB_ENV
      
      - name: Echo Terraform version        
        run: terraform version | grep Terraform
    
    #TF_VAR_TFVERSION=$(terraform version -json | grep 'terraform_version' | sed -r 's/^[^:]*:(.*)$/\1/' | sed 's/,//g' | sed 's/[[:space:]]//g')
    #   # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    #   - name: Terraform Init
    #     id: init
    #     run: terraform init

    #   # Validates the configuration used in the GitHub Action workflow
    #   - name: Terraform Validate
    #     id: validate
    #     run: terraform validate -no-color

    # # Generates an execution plan for Terraform, only on pull request
    #   - name: Terraform Plan
    #     id: plan
    #     #if: github.event_name == 'pull_request'
    #     run: terraform plan -no-color
    #     continue-on-error: true
  
